Description: >
  Membuat Windows Server EC2 dengan menggunakan AMI Windows Server 2022 terbaru yang terdaftar di System Manager.
#----------------------------------------------------------------------------------------#
Parameters:
# User memilih System Manager - Parameter Store yang berisi AMI ID untuk EC2 instance, atau bisa menggunakan public Parameter Store yang berisi AMI ID Microsoft Windows Server 2022 terbaru. Harap gunakan AMI seperti Windows Server 2022 yang sudah memiliki SSM agent terpasang didalamnya.
  AMI:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base
    Description: Select the Windows AMI ID inside System Manager - Parameter Store (The default value is the latest Windows Server 2022 in public Parameter Store).

# User memasukkan beberapa fitur dan role yang akan dipasang di Windows Server.
  Features:
    Type: String
    Default: RSAT-AD-Tools,RSAT-DNS-Server
    Description: A COMMA seperated list of Windows features that you want to enable. Please refer to Get-WindowsFeature cmdlet to fill out this parameter.

# User memasukkan nama EC2 yang akan digunakan melalui tag.
  EC2Name:
    Type: String
    Default: MyEC2
    Description: Enter the name for this EC2 instance.

  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3a.small
      - t3a.medium
    Description: Select instance type for EC2 instance. The default value is t3.micro.

  SubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: Select existing Subnet for EC2 instance.

  SecurityGroupID:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Select existing SecurityGroup for EC2 instance.

  SSHKeypair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select existing keypair for remote RDP to EC2 instance.

#----------------------------------------------------------------------------------------#
Resources:
# Buat EC2 instance dengan pilihan AMI, instance type, network interface, IAM instance profile, keypair, user data, dan tag.
  EC2:
    Type: AWS::EC2::Instance
    Properties:
# Gunakan AMI sesuai dengan value dari System Manager - Parameter Store.
      ImageId:
        Ref: AMI
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: SSHKeypair
# Mengatur network interfaces menggunakan security group dan subnet yang dipilih oleh User.
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet: 
            - Ref: SecurityGroupID
          SubnetId:
            Ref: SubnetID
# Gunakan instance profile yang terhubung dengan IAM role yang dibuat (artinya EC2 memakai IAM role melalui instance profile).
      IamInstanceProfile:
        Ref: EC2ProfileforDirectoryService
      UserData:
        Fn::Base64:
# User data bisa menggunakan variable dari parameter dengan notasi ${parameter} memanfaatkan Fn::Sub atau !Sub.
          Fn::Sub : |
            <powershell>
            Import-Module ServerManager
            Install-WindowsFeature -Name  ${Features} -IncludeAllSubFeature -IncludeManagementTools
            </powershell>
      Tags:
      - Key: Name
        Value:
          Fn::Sub: Lab - ${EC2Name}
      - Key: OS
        Value: Windows Server

# Buat ElasticIP dan pasang ke EC2 instance. Public IPv4 address ini tidak akan berubah meskipun EC2 instance-nya dimatikan lalu dihidupkan.
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId:
        Ref: EC2
      Tags: 
      - Key: Name
        Value:
          Fn::Sub: Lab - ${EC2Name} EIP

# Buat IAM role yang membolehkan:
# 1. SSM agent didalam EC2 bisa dikontrol oleh AWS System Manager.
# 2. Akses ke Directory Service (managed Microsoft Active Directory).
  EC2RoleforDirectoryService:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Statement: 
          - Effect: Allow
            Principal: 
              Service:
                - ec2.amazonaws.com
            Action: 
              - sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonSSMDirectoryServiceAccess
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: "/"
      Tags: 
      - Key: Name
        Value:
          Fn::Sub: Lab - ${EC2Name} Role

# Buat instance profile yang terhubung dengan IAM role. IAM role tidak akan dipasang secara langsung ke EC2 instance, melainkan instance profile yang akan dipasang.
  EC2ProfileforDirectoryService:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles: 
        - Ref: EC2RoleforDirectoryService

#----------------------------------------------------------------------------------------#
Outputs:
  EC2ID:
    Value:
      Ref: EC2
    Description: EC2 ID

  EC2PublicDNS:
    Value:
      Fn::GetAtt: EC2.PublicDnsName
    Description: Public DNS Endpoint of EC2

  EC2PublicIP:
    Value:
      Fn::GetAtt: EC2.PublicIp
    Description: Public IPv4 of EC2

  EC2PrivateIP:
    Value:
      Fn::GetAtt: EC2.PrivateIp
    Description: Private IPv4 of EC2

# Ekstrak informasi fitur dan role yang dipasang di Windows Server.
  FeaturesEnabled:
    Value:
      Ref: Features
    Description: Features enabled on this instance

# Membuat link untuk akses remote ke EC2 instance via System Manager - Session Manager. EC2 memiliki SSM agent dan IAM role yang cukup untuk melakukan akses remote.
  RemoteEC2:
    Value:
# Menggabungkan beberapa text untuk menampilkan link untuk akses remote, seperti:
# - URL System Manager - Session Manager yang sifatnya tidak berubah di region manapun.
# - ID dari EC2 yang ingin di remote. ID diambil dari EC2 yang dibuat.
# - Region ID yang akan berubah-berubah ketika template ini dieksekusi di region yang berbeda.
      Fn::Join: [ "", [ "https://console.aws.amazon.com/systems-manager/session-manager/", Ref: EC2, "?region=", Ref: AWS::Region ]]
    Description: Remote EC2 via System Manager - Session Manager