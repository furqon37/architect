Description: >
  Membuat EC2 yang terdaftar di SystemManager dengan menggunakan AMI Amazon Linux 2 terbaru yang sudah terinstall SSM agent, dan IAM Role yang memberikan permission ke SSM agent agar bisa dikontrol oleh AWS System Manager. EC2 juga memiliki SecurityGroup dan ElasticIP.

Parameters:
# User memilih System Manager - Parameter Store yang berisi AMI ID untuk EC2 instance, atau bisa menggunakan default value dari Public Parameter Store dari AWS yang berisikan latest AMI ID untuk Amazon Linux 2. Gunakan Amazon Linux 2 yang sudah memiliki SSM agent terinstall didalamnya.
  AMI:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Description: Select the AMI ID inside System Manager - Parameter Store (The default value is the latest Amazon Linux 2 in Public Parameter Store)

  InstanceType:
    Type: String
    Default: t3a.micro
    AllowedValues:
      - t3a.nano
      - t3a.micro
      - t3a.small
    Description: Enter instance type for EC2 instance. The default value is t3a.micro.

Resources:
  EC2:
    Type: AWS::EC2::Instance
    Properties:
# Gunakan AMI sesuai dengan value dari Parameter Store.
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType
# Gunakan InstanceProfile yang terhubung dengan IAM Role yang dibuat.
      IamInstanceProfile: !Ref EC2ProfileforSSM
      SecurityGroups:
        - !Ref SecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install -y php7.2
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          usermod -a -G apache ec2-user
          chown -R ec2-user:apache /var/www
          chmod 2775 /var/www
          find /var/www -type d -exec chmod 2775 {} \;
          find /var/www -type f -exec chmod 0664 {} \;
          echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php
      Tags: 
      - Key: Name
        Value: MyEC2

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref EC2
      Tags: 
      - Key: Name
        Value: MyEIP
  
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all IP address to SSH and HTTP
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: MySecurityGroup

# Buat IAM Role yang membolehkan agar SSM agent di EC2 bisa dikontrol oleh AWS System Manager.
  EC2RoleforSSM:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Statement: 
          - Effect: Allow
            Principal: 
              Service:
                - ec2.amazonaws.com
            Action: 
              - sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: "/"
      Tags: 
      - Key: Name
        Value: MyEC2RoleforSSM
  # Buat InstanceProfile yang terhubung dengan IAM Role. IAM Role tidak akan dipasang secara langsung ke EC2 instance, melainkan InstanceProfile inilah yang akan dipasang.
  EC2ProfileforSSM:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles: 
        - !Ref EC2RoleforSSM

Outputs:
  EC2PublicDNS:
    Description: Public DNS Endpoint of EC2
    Value: !GetAtt EC2.PublicDnsName
  EC2PublicIP:
    Description: Public IPv4 of EC2
    Value: !GetAtt EC2.PublicIp
  EC2PrivateIP:
    Description: Private IPv4 of EC2
    Value: !GetAtt EC2.PrivateIp