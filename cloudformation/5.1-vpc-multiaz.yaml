Description: >
  Membuat VPC dengan masing-masing 1 public dan 1 private subnet dikedua Availability Zone. Didalamnya ada Internet Gateway, Route Table, Security Group.

#----------------------------------------------------------------------------------------#
Parameters:
# User memasukkan nama VPC yang akan digunakan melalui Tag.
  VPCName:
    Type: String
    Default: MyVPC
    Description: Enter the name for this VPC.

# User memasukkan IP range yang nanti digunakan oleh VPC.
  VPCCIDR:
    Type: String
    Default: 192.168.0.0/16
    Description: Enter the IP range for this VPC.

# User memasukkan beberapa IP range yang nanti digunakan oleh beberapa Subnet didalam VPC.
  PublicSubnet1CIDR:
    Type: String
    Default: 192.168.0.0/24
    Description: Enter the IP range for the public subnet 1 in the first Availability Zone.

  PrivateSubnet1CIDR:
    Type: String
    Default: 192.168.1.0/24
    Description: Enter the IP range for the private subnet 1 in the first Availability Zone.

  PublicSubnet2CIDR:
    Type: String
    Default: 192.168.2.0/24
    Description: Enter the IP range for the public subnet 2 in the second Availability Zone.

  PrivateSubnet2CIDR:
    Type: String
    Default: 192.168.3.0/24
    Description: Enter the IP range for the private subnet 2 in the second Availability Zone.

#----------------------------------------------------------------------------------------#
Resources:
# Buat VPC dengan CIDR block yang user masukkan sebelumnya. EnableDnsHostnames memungkinkan VPC memberikan menerapkan public DNS hostnames ke EC2 instance. Sedangkan EnableDnsSupport memungkinkan untuk melakukan DNS resolution menggunakan Amazon DNS server.
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} 

# Mengatur agar VPC mendapatkan IPv6.
  VpcCidrBlockIpv6:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId:
        Ref: VPC
      AmazonProvidedIpv6CidrBlock: true

# Buat Internet Gateway untuk koneksi internet.
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} FastInternet

# Pasang Internet Gateway ke VPC.
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC

# Buat PublicSubnet untuk VPC dengan CIDR block yang user masukkan sebelumnya.
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select: [0, Fn::GetAZs: ""]
      CidrBlock:
        Ref: PublicSubnet1CIDR
# Memungkinkan instance didalam Subnet mendapatkan IP public.
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select: [1, Fn::GetAZs: ""]
      CidrBlock:
        Ref: PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PublicSubnet2

# Buat PrivateSubnet untuk VPC dengan CIDR block yang user masukkan sebelumnya.
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select: [0, Fn::GetAZs: ""]
      CidrBlock:
        Ref: PrivateSubnet1CIDR
# Tidak memberikan IP public untuk instance didalam Subnet.
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PrivateSubnet1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select: [1, Fn::GetAZs: ""]
      CidrBlock:
        Ref: PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PrivateSubnet2

# Buat RouteTable didalam VPC.
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PublicRoutes

# Buat Route didalam RouteTable yang mengarahkan traffic ke Internet Gateway.
  RouteEntry:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

# Pasang RouteTable ke PublicSubnet yang kita buat sebelumnya.
  RouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1

  RouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all IP address to SSH, RDP, ICMP and HTTP
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 3389
        ToPort: 3389
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value:
          Fn::Sub: Lab - ${VPCName} SecurityGroup

#----------------------------------------------------------------------------------------#
Outputs:
  VPCID:
    Value:
      Ref: VPC
    Description: VPC ID

  SecurityGroupID:
    Value:
      Ref: SecurityGroup
    Description: SecurityGroup ID

  PublicSubnetsCIDR:
# Gabung 2 PublicSubnet ID yang dibuat kedalam satu Output dengan notasi koma sebagai penyambung.
    Value:
      Fn::Join: [ ",", [ Ref: PublicSubnet1, Ref: PublicSubnet2 ]]
    Description: List of the PublicSubnets CIDR

  PrivateSubnetsCIDR:
# Gabung 2 PrivateSubnet ID yang dibuat kedalam satu Output dengan notasi koma sebagai penyambung.
    Value:
      Fn::Join: [ ",", [ Ref: PrivateSubnet1, Ref: PrivateSubnet2 ]]
    Description: List of the PrivateSubnets CIDR
