Description: >
  VPC dengan public dan private subnet dikedua availability zone, beserta komponen internet gateway, route table, dan security group.

#----------------------------------------------------------------------------------------#
Parameters:
# User memasukkan nama VPC yang digunakan didalam tag.
  VPCName:
    Type: String
    Default: MyVPC
    Description: Enter the unique name for this VPC.

# User memasukkan IP range yang digunakan VPC.
  VPCCIDR:
    Type: String
    Default: 192.168.0.0/16
    Description: Enter the IP range for this VPC.

# User memasukkan beberapa IP range yang digunakan subnet-subnet didalam VPC.
  PublicSubnet1CIDR:
    Type: String
    Default: 192.168.0.0/24
    Description: Enter the IP range for the public subnet 1 in the first Availability Zone.

  PrivateSubnet1CIDR:
    Type: String
    Default: 192.168.1.0/24
    Description: Enter the IP range for the private subnet 1 in the first Availability Zone.

  PublicSubnet2CIDR:
    Type: String
    Default: 192.168.2.0/24
    Description: Enter the IP range for the public subnet 2 in the second Availability Zone.

  PrivateSubnet2CIDR:
    Type: String
    Default: 192.168.3.0/24
    Description: Enter the IP range for the private subnet 2 in the second Availability Zone.

#----------------------------------------------------------------------------------------#
Resources:
# Buat VPC dengan CIDR block yang user masukkan sebelumnya. Rincian propertinya bisa lihat disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html.
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VPCCIDR
# Properti EnableDnsSupport memungkinkan resource didalam VPC melakukan DNS resolution menggunakan Amazon DNS server (semisal lokal DNS server tapi didalam VPC).
      EnableDnsSupport: true
# Properti EnableDnsHostnames memungkinkan VPC menerapkan public DNS hostnames ke EC2 instance.
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} 

# Mengatur agar VPC mendapatkan CIDR block IPv6. Rincian propertinya bisa lihat disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html.
  VpcCidrBlockIpv6:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId:
        Ref: VPC
      AmazonProvidedIpv6CidrBlock: true

# Buat internet gateway untuk koneksi internet. Rincian propertinya bisa lihat disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html.
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} FastInternet

# Pasang internet gateway ke VPC. Rincian propertinya bisa lihat disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html.
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC

# Buat public subnet untuk VPC dengan CIDR block yang user masukkan sebelumnya. Rincian propertinya bisa lihat disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html.
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
# Fn::GetAZs menampilkan daftar availability zone (AZ) berdasarkan urutan abjad di region dimana template ini dieksekusi. Fn::Select untuk memilih satu AZ diurutan pertama dari daftar AZ.
        Fn::Select: [0, Fn::GetAZs: ""]
      CidrBlock:
        Ref: PublicSubnet1CIDR
# Memungkinkan instance didalam subnet mendapatkan public IP address.
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
# Fn::GetAZs menampilkan daftar availability zone (AZ) berdasarkan urutan abjad di region dimana template ini dieksekusi. Fn::Select untuk memilih satu AZ diurutan kedua dari daftar AZ.
        Fn::Select: [1, Fn::GetAZs: ""]
      CidrBlock:
        Ref: PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PublicSubnet2

# Buat private subnet untuk VPC dengan CIDR block yang user masukkan sebelumnya.
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select: [0, Fn::GetAZs: ""]
      CidrBlock:
        Ref: PrivateSubnet1CIDR
# Tidak memberikan public IP address untuk instance didalam subnet.
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PrivateSubnet1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select: [1, Fn::GetAZs: ""]
      CidrBlock:
        Ref: PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PrivateSubnet2

# Buat route table didalam VPC. Rincian propertinya bisa lihat disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html.
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Sub: Lab - ${VPCName} PublicRoutes

# Buat route didalam route table yang mengarahkan traffic ke internet gateway. Rincian propertinya bisa lihat disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html.
  RouteEntry:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

# Pasang route table ke public subnet yang kita buat sebelumnya. Rincian propertinya bisa lihat disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html.
  RouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1

  RouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2

# Buat security group yang membolehkan akses HTTP (untuk website), SSH (untuk remote Linux), RDP (untuk remote Windows), and ICMP (untuk ping) bagi semua IP address. Rincian propertinya bisa lihat disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html.
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all IP address to port HTTP, SSH, RDP, and ICMP
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 3389
        ToPort: 3389
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value:
          Fn::Sub: Lab - ${VPCName} AppSecurityGroup

# Buat security group yang membolehkan akses MySQL, SQL Server, dan EFS bagi semua EC2 yang menggunakan security group "AppSecurityGroup".
  DataSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all IP address to port MySQL, SQL Server, and EFS
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId:
          Ref: AppSecurityGroup
      - IpProtocol: tcp
        FromPort: 1433
        ToPort: 1433
        SourceSecurityGroupId:
          Ref: AppSecurityGroup
      - IpProtocol: tcp
        FromPort: 2049
        ToPort: 2049
        SourceSecurityGroupId:
          Ref: AppSecurityGroup
      Tags:
      - Key: Name
        Value:
          Fn::Sub: Lab - ${VPCName} DataSecurityGroup

#----------------------------------------------------------------------------------------#
Outputs:
# Ekstrak dan export informasi ID milik VPC.
  VPCID:
    Value:
      Ref: VPC
    Description: VPC ID
# Export menyatakan bahwa value dari output bisa di import ke stack lainnya (cross-stack references). Informasi lebih lanjut ada disini https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html.
    Export:
      Name:
        Fn::Sub: "${VPCName}-VPCID"

# Ekstrak dan export informasi ID milik security group untuk EC2.
  AppSecurityGroupID:
    Value:
      Ref: AppSecurityGroup
    Description: SecurityGroup ID for EC2
    Export:
      Name:
        Fn::Sub: "${VPCName}-AppSecurityGroupID"

# Ekstrak dan export informasi ID milik security group untuk RDS atau EFS.
  DataSecurityGroupID:
    Value:
      Ref: DataSecurityGroup
    Description: SecurityGroup ID for RDS or EFS
    Export:
      Name:
        Fn::Sub: "${VPCName}-DataSecurityGroupID"

# Ekstrak dan export informasi public subnet ID. Gabung 2 public subnet ID menjadi satu output dengan notasi koma "," sebagai penyambung.
  PublicSubnetsCIDR:
    Value:
      Fn::Join: [ ",", [ Ref: PublicSubnet1, Ref: PublicSubnet2 ]]
    Description: List of the PublicSubnets CIDR
    Export:
      Name:
        Fn::Sub: "${VPCName}-PublicSubnetsCIDR"


# Ekstrak dan export informasi private subnet ID. Gabung 2 private subnet ID menjadi satu output dengan notasi koma "," sebagai penyambung.
  PrivateSubnetsCIDR:
    Value:
      Fn::Join: [ ",", [ Ref: PrivateSubnet1, Ref: PrivateSubnet2 ]]
    Description: List of the PrivateSubnets CIDR
    Export:
      Name:
        Fn::Sub: "${VPCName}-PrivateSubnetsCIDR"
